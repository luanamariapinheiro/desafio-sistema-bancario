# üí∞ DESAFIO DIO - SISTEMA BANC√ÅRIO (VERS√ÉO 2)
# Autor: Luana Silva (adapta√ß√£o orientada por ChatGPT)
# Objetivo: modularizar o sistema com fun√ß√µes e incluir usu√°rios e contas

# ==========================
# üß© VARI√ÅVEIS GLOBAIS
# ==========================

usuarios = []  # lista de dicion√°rios com dados dos clientes
contas = []    # lista de dicion√°rios com dados das contas
AGENCIA = "0001"


# ==========================
# üè¶ FUN√á√ïES PRINCIPAIS
# ==========================

def depositar(saldo, valor, extrato, /):
    """Fun√ß√£o de dep√≥sito (argumentos posicionais apenas)"""
    if valor > 0:
        saldo += valor
        extrato += f"Dep√≥sito: R$ {valor:.2f}\n"
        print("\n‚úÖ Dep√≥sito realizado com sucesso!")
    else:
        print("\n‚ö†Ô∏è  Opera√ß√£o falhou! Valor inv√°lido para dep√≥sito.")
    return saldo, extrato


def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    """Fun√ß√£o de saque (argumentos nomeados apenas)"""
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saldo:
        print("\n‚ùå Opera√ß√£o falhou! Saldo insuficiente.")
    elif excedeu_limite:
        print("\n‚ùå Opera√ß√£o falhou! Valor excede o limite de saque.")
    elif excedeu_saques:
        print("\n‚ùå Opera√ß√£o falhou! N√∫mero m√°ximo de saques atingido.")
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:    R$ {valor:.2f}\n"
        numero_saques += 1
        print("\n‚úÖ Saque realizado com sucesso!")
    else:
        print("\n‚ö†Ô∏è  Opera√ß√£o falhou! Valor inv√°lido para saque.")

    return saldo, extrato, numero_saques


def exibir_extrato(saldo, /, *, extrato):
    """Fun√ß√£o de extrato (posi√ß√£o e nome misturados)"""
    print("\n================ EXTRATO ================")
    print("N√£o foram realizadas movimenta√ß√µes." if not extrato else extrato)
    print(f"\nSaldo atual: R$ {saldo:.2f}")
    print("=========================================")


# ==========================
# üë§ FUN√á√ïES DE USU√ÅRIO
# ==========================

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente n√∫meros): ")

    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print("\n‚ö†Ô∏è  J√° existe usu√°rio cadastrado com esse CPF!")
        return

    nome = input("Nome completo: ")
    data_nascimento = input("Data de nascimento (dd-mm-aaaa): ")
    endereco = input("Endere√ßo (logradouro, nro - bairro - cidade/sigla): ")

    usuarios.append({
        "nome": nome,
        "data_nascimento": data_nascimento,
        "cpf": cpf,
        "endereco": endereco
    })

    print("\n‚úÖ Usu√°rio cadastrado com sucesso!")


def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


# ==========================
# üßæ FUN√á√ïES DE CONTA
# ==========================

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usu√°rio: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n‚úÖ Conta criada com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\n‚ö†Ô∏è  Usu√°rio n√£o encontrado! Cadastro n√£o realizado.")


def listar_contas(contas):
    for conta in contas:
        linha = f"""\
Ag√™ncia: {conta['agencia']}
C/C: {conta['numero_conta']}
Titular: {conta['usuario']['nome']}
"""
        print("=" * 30)
        print(linha)


# ==========================
# üß† LOOP PRINCIPAL
# ==========================

def main():
    LIMITE_SAQUES = 3
    limite = 500
    saldo = 0
    extrato = ""
    numero_saques = 0

    menu = """
================ MENU ================
[d] Depositar
[s] Sacar
[e] Extrato
[u] Criar usu√°rio
[c] Criar conta
[l] Listar contas
[q] Sair
======================================
=> """

    while True:
        opcao = input(menu)

        if opcao == "d":
            valor = float(input("Informe o valor do dep√≥sito: "))
            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))
            saldo, extrato, numero_saques = sacar(
                saldo=saldo, valor=valor, extrato=extrato,
                limite=limite, numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "u":
            criar_usuario(usuarios)

        elif opcao == "c":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "l":
            listar_contas(contas)

        elif opcao == "q":
            print("\nüíº Obrigado por utilizar o sistema banc√°rio DIO!")
            break

        else:
            print("\n‚ö†Ô∏è  Opera√ß√£o inv√°lida! Tente novamente.")


# ==========================
# üöÄ EXECU√á√ÉO
# ==========================

if __name__ == "__main__":
    main()
